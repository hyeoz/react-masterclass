{"ast":null,"code":"var _jsxFileName = \"/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/ToDoList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport { atom, useRecoilState } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todoState = atom({\n  key: \"todo\",\n  default: []\n});\n\nconst ToDoList = () => {\n  _s();\n\n  const [todoValue, setTodoValue] = useRecoilState(todoState); // atom 값 불러오기와 수정을 따로 쓸 필요 없이 useState 와 같은 hook 사용\n\n  const {\n    register,\n    handleSubmit,\n    setValue\n  } = useForm();\n\n  const handleValid = data => {\n    console.log(\"add to do : \", data.todo);\n    setValue(\"todo\", \"\"); // validation 통과하면 input 비워주기\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TO DOs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleValid),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"todo\", {\n          required: \"Please write a To Do\"\n        }),\n        placeholder: \"write a to do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToDoList, \"GQcRPeQKmG9pDKcPTxPn9fMQesU=\", false, function () {\n  return [useRecoilState, useForm];\n});\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/ToDoList.tsx"],"names":["useForm","atom","useRecoilState","todoState","key","default","ToDoList","todoValue","setTodoValue","register","handleSubmit","setValue","handleValid","data","console","log","todo","required"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SACEC,IADF,EAEEC,cAFF,QAKO,QALP;;AAeA,MAAMC,SAAS,GAAGF,IAAI,CAAU;AAC9BG,EAAAA,GAAG,EAAE,MADyB;AAE9BC,EAAAA,OAAO,EAAE;AAFqB,CAAV,CAAtB;;AAKA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,cAAc,CAACC,SAAD,CAAhD,CADqB,CACwC;;AAE7D,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAuCX,OAAO,EAApD;;AACA,QAAMY,WAAW,GAAIC,IAAD,IAAiB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,IAAI,CAACG,IAAjC;AACAL,IAAAA,QAAQ,CAAC,MAAD,EAAS,EAAT,CAAR,CAFmC,CAEb;AACvB,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAED,YAAY,CAACE,WAAD,CAA5B;AAAA,8BACE,sBACMH,QAAQ,CAAC,MAAD,EAAS;AACnBQ,UAAAA,QAAQ,EAAE;AADS,SAAT,CADd;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAxBD;;GAAMX,Q;UAC8BJ,c,EAEWF,O;;;KAHzCM,Q;AA0BN,eAAeA,QAAf","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport {\n  atom,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState,\n} from \"recoil\";\n\ninterface IForm {\n  todo: string;\n}\ninterface ITodo {\n  text: string;\n  category: \"TO_DO\" | \"DOING\" | \"DONE\";\n}\n\nconst todoState = atom<ITodo[]>({\n  key: \"todo\",\n  default: [],\n});\n\nconst ToDoList = () => {\n  const [todoValue, setTodoValue] = useRecoilState(todoState); // atom 값 불러오기와 수정을 따로 쓸 필요 없이 useState 와 같은 hook 사용\n\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = (data: IForm) => {\n    console.log(\"add to do : \", data.todo);\n    setValue(\"todo\", \"\"); // validation 통과하면 input 비워주기\n  };\n\n  return (\n    <div>\n      <h1>TO DOs</h1>\n      <form onSubmit={handleSubmit(handleValid)}>\n        <input\n          {...register(\"todo\", {\n            required: \"Please write a To Do\",\n          })}\n          placeholder=\"write a to do\"\n        />\n        <button>Add</button>\n      </form>\n      <ul></ul>\n    </div>\n  );\n};\n\nexport default ToDoList;\n"]},"metadata":{},"sourceType":"module"}