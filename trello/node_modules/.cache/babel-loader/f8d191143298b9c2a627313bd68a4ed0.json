{"ast":null,"code":"var _jsxFileName = \"/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/routes/Coins.tsx\",\n    _s = $RefreshSig$();\n\n// import { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { coinsFetcher } from \"../api\";\nimport { isDarkAtom } from \"../atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n_c = Container;\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c2 = Header;\nconst CoinsList = styled.ul``;\n_c3 = CoinsList;\nconst Coin = styled.li`\n  background-color: white;\n  color: ${props => props.theme.textColor};\n  margin-bottom: 10px;\n  padding: 20px;\n  border-radius: 15px;\n  a {\n    padding: 20px;\n    transition: color 0.2s ease-in;\n    display: flex;\n    align-items: center;\n  }\n  &:hover {\n    a {\n      color: ${props => props.theme.accentColor};\n    }\n  }\n`;\n_c4 = Coin;\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${props => props.theme.accentColor};\n`;\n_c5 = Title;\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n_c6 = Loader;\nconst Img = styled.img`\n  width: 25px;\n  height: 25px;\n  margin-right: 10px;\n`;\n_c7 = Img;\n\nconst Coins = _ref => {\n  _s();\n\n  let {} = _ref;\n  // const [coins, setCoins] = useState<CoinInterface[]>([]);\n  // const [loading, setLoading] = useState(true);\n  // useEffect(() => {\n  //   // 특정 함수만 async-await 사용하고 싶을 때\n  //   (async () => {\n  //     const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n  //     const json = await response.json();\n  //     setCoins(json.slice(0, 100));\n  //     setLoading(false);\n  //   })();\n  // }, []);\n  // console.log(coins);\n\n  /* useQuery 사용 */\n  const {\n    isLoading,\n    data\n  } = useQuery(\"allCoins\", coinsFetcher); // useQuery(uniquename, fetcher function) = {isLoading, data}\n  // recoil 상태 변경\n\n  const setterFn = useSetRecoilState(isDarkAtom); // 함수를 반환. react 의 setState 와 같음\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Coins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"THE COINS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setterFn(prev => !prev),\n        children: \"Toggle Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CoinsList, {\n      children: data === null || data === void 0 ? void 0 : data.slice(0, 100).map(coin => {\n        return /*#__PURE__*/_jsxDEV(Coin, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/${coin.id}`,\n            state: {\n              name: coin.name\n            },\n            children: [/*#__PURE__*/_jsxDEV(Img, {\n              src: `https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`,\n              alt: coin.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this), coin.symbol, \" \\u2192\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)\n        }, coin.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Coins, \"eZOf+UPPUJk/PwmKUDFchzCi0xg=\", false, function () {\n  return [useQuery, useSetRecoilState];\n});\n\n_c8 = Coins;\nexport default Coins;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"CoinsList\");\n$RefreshReg$(_c4, \"Coin\");\n$RefreshReg$(_c5, \"Title\");\n$RefreshReg$(_c6, \"Loader\");\n$RefreshReg$(_c7, \"Img\");\n$RefreshReg$(_c8, \"Coins\");","map":{"version":3,"sources":["/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/routes/Coins.tsx"],"names":["Helmet","useQuery","Link","useSetRecoilState","styled","coinsFetcher","isDarkAtom","Container","div","Header","header","CoinsList","ul","Coin","li","props","theme","textColor","accentColor","Title","h1","Loader","span","Img","img","Coins","isLoading","data","setterFn","prev","slice","map","coin","id","name","symbol","toLowerCase"],"mappings":"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","sourcesContent":["// import { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { coinsFetcher } from \"../api\";\nimport { isDarkAtom } from \"../atoms\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst CoinsList = styled.ul``;\nconst Coin = styled.li`\n  background-color: white;\n  color: ${(props) => props.theme.textColor};\n  margin-bottom: 10px;\n  padding: 20px;\n  border-radius: 15px;\n  a {\n    padding: 20px;\n    transition: color 0.2s ease-in;\n    display: flex;\n    align-items: center;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\nconst Img = styled.img`\n  width: 25px;\n  height: 25px;\n  margin-right: 10px;\n`;\n\ninterface CoinInterface {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\ninterface CoinsProps {\n  // toggleDark: () => void; // App 에서 함수 확인하면 나오는 type 넣어주기\n}\n\nconst Coins = ({}: CoinsProps) => {\n  // const [coins, setCoins] = useState<CoinInterface[]>([]);\n  // const [loading, setLoading] = useState(true);\n\n  // useEffect(() => {\n  //   // 특정 함수만 async-await 사용하고 싶을 때\n  //   (async () => {\n  //     const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n  //     const json = await response.json();\n  //     setCoins(json.slice(0, 100));\n  //     setLoading(false);\n  //   })();\n  // }, []);\n  // console.log(coins);\n  /* useQuery 사용 */\n  const { isLoading, data } = useQuery<CoinInterface[]>(\n    \"allCoins\",\n    coinsFetcher\n  ); // useQuery(uniquename, fetcher function) = {isLoading, data}\n  // recoil 상태 변경\n  const setterFn = useSetRecoilState(isDarkAtom); // 함수를 반환. react 의 setState 와 같음\n\n  return (\n    <Container>\n      <Helmet>\n        <title>Coins</title>\n      </Helmet>\n      <Header>\n        <Title>THE COINS</Title>\n        <button onClick={() => setterFn((prev) => !prev)}>Toggle Mode</button>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => {\n            return (\n              <Coin key={coin.id}>\n                <Link to={`/${coin.id}`} state={{ name: coin.name }}>\n                  <Img\n                    src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                    alt={coin.symbol}\n                  />\n                  {coin.symbol} &rarr;\n                </Link>\n              </Coin>\n            );\n          })}\n        </CoinsList>\n      )}\n    </Container>\n  );\n};\n\nexport default Coins;\n"]},"metadata":{},"sourceType":"module"}