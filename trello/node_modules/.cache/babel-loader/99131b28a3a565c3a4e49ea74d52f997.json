{"ast":null,"code":"var _jsxFileName = \"/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/components/ToDoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { Categories, categoryState } from \"../atoms\";\nimport CreateTodo from \"./CreateTodo\";\nimport Todo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDoList = () => {\n  _s();\n\n  // const todos = useRecoilValue(todoState); // 리팩토링하며 modifier 함수 필요없어졌기 때문에 useRecoilValue 사용\n  // const todos = useRecoilValue(todoSelector); // 배열 풀어주기\n  const [category, setCategory] = useRecoilState(categoryState);\n  const [todos, setTodos] = useState();\n  let localTodos = [];\n\n  const onInput = event => {\n    setCategory(event.currentTarget.value);\n  }; // console.log(todos, \"todos read\");\n\n\n  useEffect(() => {\n    Object.entries(localStorage).map(arr => {\n      return localTodos.push(JSON.parse(arr[1]));\n    }); // console.log(\n    //   localTodos.filter((todo) => todo.category === category),\n    //   \"local storage read\"\n    // );\n\n    setTodos(localTodos.filter(todo => todo.category === category).sort((prev, el) => {\n      return el.id - prev.id;\n    }));\n  }, [category, setTodos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TO DOs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onInput: onInput,\n      value: category,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: Categories.TO_DO,\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: Categories.DOING,\n        children: \"Doing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: Categories.DONE,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTodo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), todos === null || todos === void 0 ? void 0 : todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(Todo, { ...todo\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToDoList, \"u3tYtkK8O2xmpA1mavJcHTj699Y=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/components/ToDoList.tsx"],"names":["React","useEffect","useState","useRecoilState","Categories","categoryState","CreateTodo","Todo","ToDoList","category","setCategory","todos","setTodos","localTodos","onInput","event","currentTarget","value","Object","entries","localStorage","map","arr","push","JSON","parse","filter","todo","sort","prev","el","id","TO_DO","DOING","DONE"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,UAAT,EAAqBC,aAArB,QAAiD,UAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB;AACA;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,cAAc,CAACE,aAAD,CAA9C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,EAAlC;AAEA,MAAIW,UAAmB,GAAG,EAA1B;;AAEA,QAAMC,OAAO,GAAIC,KAAD,IAA+C;AAC7DL,IAAAA,WAAW,CAACK,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAX;AACD,GAFD,CARqB,CAWrB;;;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,MAAM,CAACC,OAAP,CAAeC,YAAf,EAA6BC,GAA7B,CAAkCC,GAAD,IAAS;AACxC,aAAOT,UAAU,CAACU,IAAX,CAAgBC,IAAI,CAACC,KAAL,CAAWH,GAAG,CAAC,CAAD,CAAd,CAAhB,CAAP;AACD,KAFD,EADc,CAId;AACA;AACA;AACA;;AACAV,IAAAA,QAAQ,CACNC,UAAU,CACPa,MADH,CACWC,IAAD,IAAUA,IAAI,CAAClB,QAAL,KAAkBA,QADtC,EAEGmB,IAFH,CAEQ,CAACC,IAAD,EAAOC,EAAP,KAAc;AAClB,aAAOA,EAAE,CAACC,EAAH,GAAQF,IAAI,CAACE,EAApB;AACD,KAJH,CADM,CAAR;AAOD,GAfQ,EAeN,CAACtB,QAAD,EAAWG,QAAX,CAfM,CAAT;AAiBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEE,OAAjB;AAA0B,MAAA,KAAK,EAAEL,QAAjC;AAAA,8BACE;AAAQ,QAAA,KAAK,EAAEL,UAAU,CAAC4B,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,KAAK,EAAE5B,UAAU,CAAC6B,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,KAAK,EAAE7B,UAAU,CAAC8B,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAPF,EAQGvB,KARH,aAQGA,KARH,uBAQGA,KAAK,CAAEU,GAAP,CAAYM,IAAD,IAAU;AACpB,0BAAO,QAAC,IAAD,OAAwBA;AAAxB,SAAWA,IAAI,CAACI,EAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA5CD;;GAAMvB,Q;UAG4BL,c;;;KAH5BK,Q;AA8CN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { Categories, categoryState, ITodo } from \"../atoms\";\nimport CreateTodo from \"./CreateTodo\";\nimport Todo from \"./Todo\";\n\nconst ToDoList = () => {\n  // const todos = useRecoilValue(todoState); // 리팩토링하며 modifier 함수 필요없어졌기 때문에 useRecoilValue 사용\n  // const todos = useRecoilValue(todoSelector); // 배열 풀어주기\n  const [category, setCategory] = useRecoilState(categoryState);\n  const [todos, setTodos] = useState<ITodo[]>();\n\n  let localTodos: ITodo[] = [];\n\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    setCategory(event.currentTarget.value as any);\n  };\n  // console.log(todos, \"todos read\");\n\n  useEffect(() => {\n    Object.entries(localStorage).map((arr) => {\n      return localTodos.push(JSON.parse(arr[1]));\n    });\n    // console.log(\n    //   localTodos.filter((todo) => todo.category === category),\n    //   \"local storage read\"\n    // );\n    setTodos(\n      localTodos\n        .filter((todo) => todo.category === category)\n        .sort((prev, el) => {\n          return el.id - prev.id;\n        })\n    );\n  }, [category, setTodos]);\n\n  return (\n    <div>\n      <h1>TO DOs</h1>\n      <select onInput={onInput} value={category}>\n        <option value={Categories.TO_DO}>To Do</option>\n        <option value={Categories.DOING}>Doing</option>\n        <option value={Categories.DONE}>Done</option>\n      </select>\n      <CreateTodo />\n      {todos?.map((todo) => {\n        return <Todo key={todo.id} {...todo} />;\n      })}\n    </div>\n  );\n};\n\nexport default ToDoList;\n"]},"metadata":{},"sourceType":"module"}