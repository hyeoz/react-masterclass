{"ast":null,"code":"var _jsxFileName = \"/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/components/CreateTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport useLocalStorage from \"react-localstorage-hook\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { categoryState, todoState } from \"../atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateTodo = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    setValue\n  } = useForm();\n  const [todos, setTodos] = useRecoilState(todoState);\n  const category = useRecoilValue(categoryState);\n  const [values, setValues] = useLocalStorage(todos[0].id.toString());\n\n  const handleValid = data => {\n    // console.log(\"add to do : \", data);\n    setValue(\"todo\", \"\"); // validation 통과하면 input 비워주기\n\n    setTodos(old => {\n      return [{\n        text: data.todo,\n        category: category,\n        id: Date.now()\n      }, ...old];\n    });\n  }; // 코드챌린지. local storage 저장기능\n\n\n  if (!values && JSON.stringify(todos[0]) !== undefined) {\n    setValues(JSON.stringify(todos[0]));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(handleValid),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"todo\", {\n        required: \"Please write a To Do\"\n      }),\n      placeholder: \"write a to do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateTodo, \"LyV0li4s85I/7tK2SQvL93uogb8=\", false, function () {\n  return [useForm, useRecoilState, useRecoilValue, useLocalStorage];\n});\n\n_c = CreateTodo;\nexport default CreateTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTodo\");","map":{"version":3,"sources":["/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/components/CreateTodo.tsx"],"names":["useForm","useLocalStorage","useRecoilState","useRecoilValue","categoryState","todoState","CreateTodo","register","handleSubmit","setValue","todos","setTodos","category","values","setValues","id","toString","handleValid","data","old","text","todo","Date","now","JSON","stringify","undefined","required"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,QAA/C;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,UAAzC;;;AAMA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAuCT,OAAO,EAApD;AAEA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBT,cAAc,CAACG,SAAD,CAAxC;AACA,QAAMO,QAAQ,GAAGT,cAAc,CAACC,aAAD,CAA/B;AAEA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBb,eAAe,CAACS,KAAK,CAAC,CAAD,CAAL,CAASK,EAAT,CAAYC,QAAZ,EAAD,CAA3C;;AAEA,QAAMC,WAAW,GAAIC,IAAD,IAAiB;AACnC;AACAT,IAAAA,QAAQ,CAAC,MAAD,EAAS,EAAT,CAAR,CAFmC,CAEb;;AACtBE,IAAAA,QAAQ,CAAEQ,GAAD,IAAS;AAChB,aAAO,CAAC;AAAEC,QAAAA,IAAI,EAAEF,IAAI,CAACG,IAAb;AAAmBT,QAAAA,QAAQ,EAAEA,QAA7B;AAAuCG,QAAAA,EAAE,EAAEO,IAAI,CAACC,GAAL;AAA3C,OAAD,EAA0D,GAAGJ,GAA7D,CAAP;AACD,KAFO,CAAR;AAGD,GAND,CARuB,CAgBvB;;;AACA,MAAI,CAACN,MAAD,IAAWW,IAAI,CAACC,SAAL,CAAef,KAAK,CAAC,CAAD,CAApB,MAA6BgB,SAA5C,EAAuD;AACrDZ,IAAAA,SAAS,CAACU,IAAI,CAACC,SAAL,CAAef,KAAK,CAAC,CAAD,CAApB,CAAD,CAAT;AACD;;AAED,sBACE;AAAM,IAAA,QAAQ,EAAEF,YAAY,CAACS,WAAD,CAA5B;AAAA,4BACE,sBACMV,QAAQ,CAAC,MAAD,EAAS;AACnBoB,QAAAA,QAAQ,EAAE;AADS,OAAT,CADd;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAhCD;;GAAMrB,U;UACyCN,O,EAEnBE,c,EACTC,c,EAEWF,e;;;KANxBK,U;AAkCN,eAAeA,UAAf","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport useLocalStorage from \"react-localstorage-hook\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { categoryState, todoState } from \"../atoms\";\n\ninterface IForm {\n  todo: string;\n}\n\nconst CreateTodo = () => {\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n\n  const [todos, setTodos] = useRecoilState(todoState);\n  const category = useRecoilValue(categoryState);\n\n  const [values, setValues] = useLocalStorage(todos[0].id.toString());\n\n  const handleValid = (data: IForm) => {\n    // console.log(\"add to do : \", data);\n    setValue(\"todo\", \"\"); // validation 통과하면 input 비워주기\n    setTodos((old) => {\n      return [{ text: data.todo, category: category, id: Date.now() }, ...old];\n    });\n  };\n\n  // 코드챌린지. local storage 저장기능\n  if (!values && JSON.stringify(todos[0]) !== undefined) {\n    setValues(JSON.stringify(todos[0]));\n  }\n\n  return (\n    <form onSubmit={handleSubmit(handleValid)}>\n      <input\n        {...register(\"todo\", {\n          required: \"Please write a To Do\",\n        })}\n        placeholder=\"write a to do\"\n      />\n      <button>Add</button>\n    </form>\n  );\n};\n\nexport default CreateTodo;\n"]},"metadata":{},"sourceType":"module"}