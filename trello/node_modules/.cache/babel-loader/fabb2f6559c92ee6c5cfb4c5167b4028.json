{"ast":null,"code":"var _jsxFileName = \"/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/components/ToDoList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport { atom, useRecoilState } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todoState = atom({\n  key: \"todo\",\n  default: []\n});\n\nconst ToDoList = () => {\n  _s();\n\n  const [todos, setTodos] = useRecoilState(todoState); // atom 값 불러오기와 수정을 따로 쓸 필요 없이 useState 와 같은 hook 사용\n\n  const {\n    register,\n    handleSubmit,\n    setValue\n  } = useForm();\n\n  const handleValid = data => {\n    console.log(\"add to do : \", data.todo);\n    setValue(\"todo\", \"\"); // validation 통과하면 input 비워주기\n\n    setTodos(old => {\n      return [{\n        text: data.todo,\n        category: \"TO_DO\",\n        id: Date.now()\n      }, ...old];\n    });\n  };\n\n  console.log(todos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TO DOs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleValid),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"todo\", {\n          required: \"Please write a To Do\"\n        }),\n        placeholder: \"write a to do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: todo.text\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToDoList, \"PI3dyf6YtzAIvt7kGIWkYCm15h0=\", false, function () {\n  return [useRecoilState, useForm];\n});\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/components/ToDoList.tsx"],"names":["useForm","atom","useRecoilState","todoState","key","default","ToDoList","todos","setTodos","register","handleSubmit","setValue","handleValid","data","console","log","todo","old","text","category","id","Date","now","required","map"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,IAAT,EAAeC,cAAf,QAAqC,QAArC;;AAYA,MAAMC,SAAS,GAAGF,IAAI,CAAU;AAC9BG,EAAAA,GAAG,EAAE,MADyB;AAE9BC,EAAAA,OAAO,EAAE;AAFqB,CAAV,CAAtB;;AAKA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,cAAc,CAACC,SAAD,CAAxC,CADqB,CACgC;;AAErD,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAuCX,OAAO,EAApD;;AACA,QAAMY,WAAW,GAAIC,IAAD,IAAiB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,IAAI,CAACG,IAAjC;AACAL,IAAAA,QAAQ,CAAC,MAAD,EAAS,EAAT,CAAR,CAFmC,CAEb;;AACtBH,IAAAA,QAAQ,CAAES,GAAD,IAAS;AAChB,aAAO,CAAC;AAAEC,QAAAA,IAAI,EAAEL,IAAI,CAACG,IAAb;AAAmBG,QAAAA,QAAQ,EAAE,OAA7B;AAAsCC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAA1C,OAAD,EAAyD,GAAGL,GAA5D,CAAP;AACD,KAFO,CAAR;AAGD,GAND;;AAQAH,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEG,YAAY,CAACE,WAAD,CAA5B;AAAA,8BACE,sBACMH,QAAQ,CAAC,MAAD,EAAS;AACnBc,UAAAA,QAAQ,EAAE;AADS,SAAT,CADd;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE;AAAA,gBACGhB,KAAK,CAACiB,GAAN,CAAWR,IAAD,IAAU;AACnB,4BAAO;AAAA,oBAAmBA,IAAI,CAACE;AAAxB,WAASF,IAAI,CAACI,EAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAjCD;;GAAMd,Q;UACsBJ,c,EAEmBF,O;;;KAHzCM,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { atom, useRecoilState } from \"recoil\";\n\ninterface IForm {\n  todo: string;\n}\ninterface ITodo {\n  text: string;\n  // 특정 옵션으로 제한할 경우\n  category: \"TO_DO\" | \"DOING\" | \"DONE\";\n  id: number;\n}\n\nconst todoState = atom<ITodo[]>({\n  key: \"todo\",\n  default: [],\n});\n\nconst ToDoList = () => {\n  const [todos, setTodos] = useRecoilState(todoState); // atom 값 불러오기와 수정을 따로 쓸 필요 없이 useState 와 같은 hook 사용\n\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = (data: IForm) => {\n    console.log(\"add to do : \", data.todo);\n    setValue(\"todo\", \"\"); // validation 통과하면 input 비워주기\n    setTodos((old) => {\n      return [{ text: data.todo, category: \"TO_DO\", id: Date.now() }, ...old];\n    });\n  };\n\n  console.log(todos);\n\n  return (\n    <div>\n      <h1>TO DOs</h1>\n      <form onSubmit={handleSubmit(handleValid)}>\n        <input\n          {...register(\"todo\", {\n            required: \"Please write a To Do\",\n          })}\n          placeholder=\"write a to do\"\n        />\n        <button>Add</button>\n      </form>\n      <ul>\n        {todos.map((todo) => {\n          return <li key={todo.id}>{todo.text}</li>;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ToDoList;\n"]},"metadata":{},"sourceType":"module"}