{"ast":null,"code":"var _jsxFileName = \"/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/routes/Price.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router\";\nimport styled from \"styled-components\";\nimport { coinTickersFetcher } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 2fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n_c = Tabs;\nconst Tab = styled.span`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${props => props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\n_c2 = Tab;\n\nconst Price = () => {\n  _s();\n\n  const [athPriceClick, setAthPriceClick] = useState(false);\n\n  const athClick = () => {\n    setAthPriceClick(!athPriceClick);\n  };\n\n  const {\n    coinId\n  } = useParams(); // console.log(coinId);\n\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ticker price\", coinId], () => coinTickersFetcher(coinId ? coinId : \"\"));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Tabs, {\n      children: /*#__PURE__*/_jsxDEV(Tab, {\n        isActive: athPriceClick,\n        onClick: athClick,\n        children: \"All Time High Price :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Price, \"3RftnhuLqhWEu1u7UjxP9/UQcWY=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c3 = Price;\nexport default Price;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Tabs\");\n$RefreshReg$(_c2, \"Tab\");\n$RefreshReg$(_c3, \"Price\");","map":{"version":3,"sources":["/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/routes/Price.tsx"],"names":["useState","useQuery","useParams","styled","coinTickersFetcher","Tabs","div","Tab","span","props","isActive","theme","accentColor","textColor","Price","athPriceClick","setAthPriceClick","athClick","coinId","isLoading","data"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAA6BC,kBAA7B,QAAuD,QAAvD;;;AAEA,MAAMC,IAAI,GAAGF,MAAM,CAACG,GAAI;AACxB;AACA;AACA;AACA;AACA,CALA;KAAMD,I;AAMN,MAAME,GAAG,GAAGJ,MAAM,CAACK,IAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAYC,KAAD,IACPA,KAAK,CAACC,QAAN,GAAiBD,KAAK,CAACE,KAAN,CAAYC,WAA7B,GAA2CH,KAAK,CAACE,KAAN,CAAYE,SAAU;AACrE;AACA;AACA;AACA,CAbA;MAAMN,G;;AAiDN,MAAMO,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,KAAD,CAAlD;;AACA,QAAMiB,QAAQ,GAAG,MAAM;AACrBD,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD,GAFD;;AAIA,QAAM;AAAEG,IAAAA;AAAF,MAAahB,SAAS,EAA5B,CANkB,CAOlB;;AACA,QAAM;AAAEiB,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBnB,QAAQ,CAClC,CAAC,cAAD,EAAiBiB,MAAjB,CADkC,EAElC,MAAMd,kBAAkB,CAACc,MAAM,GAAGA,MAAH,GAAY,EAAnB,CAFU,CAApC;AAKA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,QAAQ,EAAEH,aAAf;AAA8B,QAAA,OAAO,EAAEE,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AASD,CAtBD;;GAAMH,K;UAMeZ,S,EAESD,Q;;;MARxBa,K;AAwBN,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router\";\nimport styled from \"styled-components\";\nimport { coinHistoryFetcher, coinTickersFetcher } from \"../api\";\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 2fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nconst Price = () => {\n  const [athPriceClick, setAthPriceClick] = useState(false);\n  const athClick = () => {\n    setAthPriceClick(!athPriceClick);\n  };\n\n  const { coinId } = useParams<{ coinId: string }>();\n  // console.log(coinId);\n  const { isLoading, data } = useQuery<PriceData[]>(\n    [\"ticker price\", coinId],\n    () => coinTickersFetcher(coinId ? coinId : \"\")\n  );\n\n  return (\n    <>\n      <Tabs>\n        <Tab isActive={athPriceClick} onClick={athClick}>\n          All Time High Price :\n        </Tab>\n      </Tabs>\n    </>\n  );\n};\n\nexport default Price;\n"]},"metadata":{},"sourceType":"module"}