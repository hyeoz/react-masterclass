{"ast":null,"code":"var _jsxFileName = \"/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/routes/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router\";\nimport { coinHistoryFetcher } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = () => {\n  _s();\n\n  const {\n    coinId\n  } = useParams(); // console.log(coinId);\n\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => coinHistoryFetcher(coinId ? coinId : \"\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading chart...\" :\n    /*#__PURE__*/\n\n    /* 자세한 옵션은 공식 문서 참고 \n    https://apexcharts.com/docs/options */\n    // <ApexChart\n    //   type=\"line\"\n    //   options={{\n    //     theme: { mode: \"dark\" },\n    // chart: {\n    //   height: 300,\n    //   width: 500,\n    //   toolbar: { show: false },\n    //   background: \"transparent\",\n    // },\n    //     stroke: { curve: \"smooth\", width: 4 },\n    //     grid: { show: false },\n    //     yaxis: { show: false },\n    //     xaxis: {\n    //       labels: { show: false },\n    //       axisTicks: { show: false },\n    //       categories: data?.map((time) => time.time_close),\n    //       type: \"datetime\",\n    //     },\n    //     fill: {\n    //       type: \"gradient\",\n    //       gradient: { gradientToColors: [\"blue\"], stops: [0, 100] },\n    //     },\n    // colors: [\"red\"],\n    // tooltip: { y: { formatter: (value) => `$ ${value.toFixed(3)}` } },\n    //   }}\n    //   series={[\n    //     {\n    //       name: \"price\",\n    //       data: data?.map((price) => price.close),\n    //     },\n    //   ]}\n    // />\n    _jsxDEV(ApexChart, {\n      type: \"candlestick\",\n      series: [{\n        data: data === null || data === void 0 ? void 0 : data.map(price => {\n          return {\n            x: price.time_close,\n            y: [price.open, price.high, price.low, price.close]\n          };\n        })\n      }],\n      options: {\n        chart: {\n          height: 300,\n          width: 500,\n          toolbar: {\n            show: false\n          },\n          background: \"transparent\"\n        },\n        grid: {\n          show: false\n        },\n        yaxis: {\n          show: false\n        },\n        xaxis: {\n          type: \"datetime\",\n          labels: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          }\n        },\n        tooltip: {\n          theme: \"dark\",\n          custom: _ref => {\n            let {\n              dataPointIndex,\n              series,\n              w\n            } = _ref;\n            console.log(w.w.globals.seriesCandleO);\n            return '<div class=\"apexcharts-tooltip-candlestick\">' + '<div>Open: $<span class=\"value\">' + w.globals.seriesCandleO + \"</span></div>\" + '<div>High: $<span class=\"value\">' + series[0][dataPointIndex] + \"</span></div>\" + '<div>Low: $<span class=\"value\">' + series[0][dataPointIndex] + \"</span></div>\" + '<div>Close: $<span class=\"value\">' + series[0][dataPointIndex] + \"</span></div>\" + \"</div>\";\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"F8tQGsA9VOOufHrbsUg5eY+nSnY=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/routes/Chart.tsx"],"names":["useQuery","useParams","coinHistoryFetcher","ApexChart","Chart","coinId","isLoading","data","map","price","x","time_close","y","open","high","low","close","chart","height","width","toolbar","show","background","grid","yaxis","xaxis","type","labels","axisTicks","tooltip","theme","custom","dataPointIndex","series","w","console","log","globals","seriesCandleO"],"mappings":"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","sourcesContent":["import { useQuery } from \"react-query\";\nimport { useParams } from \"react-router\";\nimport { coinHistoryFetcher } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface HistoricalDataInterface {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\nconst Chart = () => {\n  const { coinId } = useParams<{ coinId: string }>();\n  // console.log(coinId);\n  const { isLoading, data } = useQuery<HistoricalDataInterface[]>(\n    [\"ohlcv\", coinId],\n    () => coinHistoryFetcher(coinId ? coinId : \"\")\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        /* 자세한 옵션은 공식 문서 참고 \n        https://apexcharts.com/docs/options */\n        // <ApexChart\n        //   type=\"line\"\n        //   options={{\n        //     theme: { mode: \"dark\" },\n        // chart: {\n        //   height: 300,\n        //   width: 500,\n        //   toolbar: { show: false },\n        //   background: \"transparent\",\n        // },\n        //     stroke: { curve: \"smooth\", width: 4 },\n        //     grid: { show: false },\n        //     yaxis: { show: false },\n        //     xaxis: {\n        //       labels: { show: false },\n        //       axisTicks: { show: false },\n        //       categories: data?.map((time) => time.time_close),\n        //       type: \"datetime\",\n        //     },\n        //     fill: {\n        //       type: \"gradient\",\n        //       gradient: { gradientToColors: [\"blue\"], stops: [0, 100] },\n        //     },\n        // colors: [\"red\"],\n        // tooltip: { y: { formatter: (value) => `$ ${value.toFixed(3)}` } },\n        //   }}\n        //   series={[\n        //     {\n        //       name: \"price\",\n        //       data: data?.map((price) => price.close),\n        //     },\n        //   ]}\n        // />\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              data: data?.map((price) => {\n                return {\n                  x: price.time_close,\n                  y: [price.open, price.high, price.low, price.close],\n                };\n              }),\n            },\n          ]}\n          options={{\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: { show: false },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            yaxis: { show: false },\n            xaxis: {\n              type: \"datetime\",\n              labels: { show: false },\n              axisTicks: { show: false },\n            },\n            tooltip: {\n              theme: \"dark\",\n              custom: ({ dataPointIndex, series, w }) => {\n                console.log(w.w.globals.seriesCandleO);\n\n                return (\n                  '<div class=\"apexcharts-tooltip-candlestick\">' +\n                  '<div>Open: $<span class=\"value\">' +\n                  w.globals.seriesCandleO +\n                  \"</span></div>\" +\n                  '<div>High: $<span class=\"value\">' +\n                  series[0][dataPointIndex] +\n                  \"</span></div>\" +\n                  '<div>Low: $<span class=\"value\">' +\n                  series[0][dataPointIndex] +\n                  \"</span></div>\" +\n                  '<div>Close: $<span class=\"value\">' +\n                  series[0][dataPointIndex] +\n                  \"</span></div>\" +\n                  \"</div>\"\n                );\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}