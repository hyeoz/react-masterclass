{"ast":null,"code":"var _jsxFileName = \"/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/Circle.tsx\";\nimport styled from \"styled-components\"; // interface 에서 props 성격을 설정했으면\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// props 를 사용한다는 것을 알려줘야 함\nconst Container = styled.div`\n  width: 200px;\n  height: 200px;\n  background-color: ${props => props.bgColor};\n  border-radius: 100px;\n  border: 1px solid ${props => props.borderColor};\n`;\n_c = Container;\n\nconst Circle = _ref => {\n  let {\n    bgColor,\n    borderColor\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    bgColor: bgColor,\n    borderColor: borderColor !== null && borderColor !== void 0 ? borderColor : \"black\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this); // optional 인 경우 초기값 설정해주기\n};\n\n_c2 = Circle;\nexport default Circle; // interface PlayerShape {\n//   name: string,\n//   age: number\n// }\n// const sayHello = (playerObj: PlayerShape) => `Hello ${playerObj.name}, You are ${playerObj.name} years old.`;\n// sayHello({name: \"hyeoz\", age: 12})\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Circle\");","map":{"version":3,"sources":["/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/Circle.tsx"],"names":["styled","Container","div","props","bgColor","borderColor","Circle"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,mBAAnB,C,CAEA;;;AAKA;AACA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAoB;AAC7C;AACA;AACA,sBAAsBC,KAAK,IAAIA,KAAK,CAACC,OAAQ;AAC7C;AACA,sBAAsBD,KAAK,IAAIA,KAAK,CAACE,WAAY;AACjD,CANA;KAAMJ,S;;AAaN,MAAMK,MAAM,GAAG,QAAyC;AAAA,MAAxC;AAACF,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAwC;AACtD,sBAAO,QAAC,SAAD;AAAW,IAAA,OAAO,EAAED,OAApB;AAA6B,IAAA,WAAW,EAAEC,WAAF,aAAEA,WAAF,cAAEA,WAAF,GAAiB;AAAzD;AAAA;AAAA;AAAA;AAAA,UAAP,CADsD,CACsB;AAC7E,CAFD;;MAAMC,M;AAIN,eAAeA,MAAf,C,CAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import styled from \"styled-components\"\n\n// interface 에서 props 성격을 설정했으면\ninterface ContainerProps {\n  bgColor: string;\n  borderColor: string; // CSS에서는 optional 이 될 수 없음\n}\n// props 를 사용한다는 것을 알려줘야 함\nconst Container = styled.div<ContainerProps>`\n  width: 200px;\n  height: 200px;\n  background-color: ${props => props.bgColor};\n  border-radius: 100px;\n  border: 1px solid ${props => props.borderColor};\n`;\n\ninterface CircleProps {\n  bgColor: string;\n  borderColor?: string; // optional 로 만들기\n}\n\nconst Circle = ({bgColor, borderColor}: CircleProps) => {\n  return <Container bgColor={bgColor} borderColor={borderColor ?? \"black\"} /> // optional 인 경우 초기값 설정해주기\n}\n\nexport default Circle;\n\n// interface PlayerShape {\n//   name: string,\n//   age: number\n// }\n// const sayHello = (playerObj: PlayerShape) => `Hello ${playerObj.name}, You are ${playerObj.name} years old.`;\n\n// sayHello({name: \"hyeoz\", age: 12})"]},"metadata":{},"sourceType":"module"}