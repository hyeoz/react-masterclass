{"ast":null,"code":"var _jsxFileName = \"/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/components/Todo.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { todoState } from \"../atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = _ref => {\n  _s();\n\n  let {\n    text,\n    category,\n    id\n  } = _ref;\n  const setTodos = useSetRecoilState(todoState); // interface 중 하나 지정\n  // const onClick = (cat: ITodo[\"category\"]) => {\n  // event interface 지정해줄 때\n\n  const onClick = event => {\n    // console.log(\"new category\", event.currentTarget.name);\n    const {\n      currentTarget: {\n        name\n      }\n    } = event;\n    setTodos(old => {\n      const targetIndex = old.findIndex(todo => todo.id === id);\n      console.log(targetIndex);\n      return old;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), category !== \"DOING\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      name: \"DOING\",\n      onClick: onClick,\n      children: \"Doing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), category !== \"TO_DO\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      name: \"TO_DO\",\n      onClick: onClick,\n      children: \"ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), category !== \"DONE\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      name: \"DONE\",\n      onClick: onClick,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"g0+giO2igBcDtW9d2px9uR6vnxU=\", false, function () {\n  return [useSetRecoilState];\n});\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/components/Todo.tsx"],"names":["React","useSetRecoilState","todoState","Todo","text","category","id","setTodos","onClick","event","currentTarget","name","old","targetIndex","findIndex","todo","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,SAAgBC,SAAhB,QAAiC,UAAjC;;;AAEA,MAAMC,IAAI,GAAG,QAAmC;AAAA;;AAAA,MAAlC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAAkC;AAC9C,QAAMC,QAAQ,GAAGN,iBAAiB,CAACC,SAAD,CAAlC,CAD8C,CAE9C;AACA;AACA;;AACA,QAAMM,OAAO,GAAIC,KAAD,IAAgD;AAC9D;AACA,UAAM;AACJC,MAAAA,aAAa,EAAE;AAAEC,QAAAA;AAAF;AADX,QAEFF,KAFJ;AAGAF,IAAAA,QAAQ,CAAEK,GAAD,IAAS;AAChB,YAAMC,WAAW,GAAGD,GAAG,CAACE,SAAJ,CAAeC,IAAD,IAAUA,IAAI,CAACT,EAAL,KAAYA,EAApC,CAApB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AAEA,aAAOD,GAAP;AACD,KALO,CAAR;AAMD,GAXD;;AAaA,sBACE;AAAA,4BACE;AAAA,gBAAOR;AAAP;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,QAAQ,KAAK,OAAb,iBACC;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,OAAO,EAAEG,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGH,QAAQ,KAAK,OAAb,iBACC;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,OAAO,EAAEG,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,EAYGH,QAAQ,KAAK,MAAb,iBACC;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAEG,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAtCD;;GAAML,I;UACaF,iB;;;KADbE,I;AAwCN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { ITodo, todoState } from \"../atoms\";\n\nconst Todo = ({ text, category, id }: ITodo) => {\n  const setTodos = useSetRecoilState(todoState);\n  // interface 중 하나 지정\n  // const onClick = (cat: ITodo[\"category\"]) => {\n  // event interface 지정해줄 때\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    // console.log(\"new category\", event.currentTarget.name);\n    const {\n      currentTarget: { name },\n    } = event;\n    setTodos((old) => {\n      const targetIndex = old.findIndex((todo) => todo.id === id);\n      console.log(targetIndex);\n\n      return old;\n    });\n  };\n\n  return (\n    <li>\n      <span>{text}</span>\n      {category !== \"DOING\" && (\n        <button name=\"DOING\" onClick={onClick}>\n          Doing\n        </button>\n      )}\n      {category !== \"TO_DO\" && (\n        <button name=\"TO_DO\" onClick={onClick}>\n          ToDo\n        </button>\n      )}\n      {category !== \"DONE\" && (\n        <button name=\"DONE\" onClick={onClick}>\n          Done\n        </button>\n      )}\n    </li>\n  );\n};\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}