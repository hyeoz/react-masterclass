{"ast":null,"code":"var _jsxFileName = \"/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/components/Todo.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { Categories, todoState } from \"../atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = _ref => {\n  _s();\n\n  let {\n    text,\n    category,\n    id\n  } = _ref;\n  const setTodos = useSetRecoilState(todoState); // interface 중 하나 지정\n  // const onClick = (cat: ITodo[\"category\"]) => {\n\n  const onClick = event => {\n    // event interface 지정해줄 때\n    // console.log(\"new category\", event.currentTarget.name);\n    const {\n      currentTarget: {\n        name\n      }\n    } = event;\n    setTodos(old => {\n      const targetIndex = old.findIndex(todo => todo.id === id); // const oldTodo = old[targetIndex];\n\n      const newTodo = {\n        text,\n        id,\n        category: name\n      }; // interface error 없애기 위해\n      // console.log(oldTodo, newTodo, \"old & new\");\n      // 클릭시 local storage 도 수정되도록 기능 구현\n\n      localStorage.removeItem(newTodo.id.toString());\n      localStorage.setItem(newTodo.id.toString(), JSON.stringify(newTodo));\n      return [...old.slice(0, targetIndex), newTodo, ...old.slice(targetIndex + 1)];\n    });\n  };\n\n  const onClickDelete = event => {\n    const {\n      currentTarget: {\n        name\n      }\n    } = event;\n    setTodos(old => {\n      const targetIndex = old.findIndex(todo => todo.id === id);\n      const newTodo = {\n        text,\n        id,\n        category: name\n      }; // 클릭시 삭제되는 기능 구현\n\n      localStorage.removeItem(newTodo.id.toString());\n      return [...old.slice(0, targetIndex), ...old.slice(targetIndex + 1)];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: onClickDelete,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), category !== Categories.DOING && /*#__PURE__*/_jsxDEV(\"button\", {\n      name: Categories.DOING,\n      onClick: onClick,\n      children: \"Doing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), category !== Categories.TO_DO && /*#__PURE__*/_jsxDEV(\"button\", {\n      name: Categories.TO_DO,\n      onClick: onClick,\n      children: \"ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), category !== Categories.DONE && /*#__PURE__*/_jsxDEV(\"button\", {\n      name: Categories.DONE,\n      onClick: onClick,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"g0+giO2igBcDtW9d2px9uR6vnxU=\", false, function () {\n  return [useSetRecoilState];\n});\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/components/Todo.tsx"],"names":["React","useSetRecoilState","Categories","todoState","Todo","text","category","id","setTodos","onClick","event","currentTarget","name","old","targetIndex","findIndex","todo","newTodo","localStorage","removeItem","toString","setItem","JSON","stringify","slice","onClickDelete","DOING","TO_DO","DONE"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { Categories, ITodo, todoState } from \"../atoms\";\n\nconst Todo = ({ text, category, id }: ITodo) => {\n  const setTodos = useSetRecoilState(todoState);\n  // interface 중 하나 지정\n  // const onClick = (cat: ITodo[\"category\"]) => {\n\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    // event interface 지정해줄 때\n    // console.log(\"new category\", event.currentTarget.name);\n    const {\n      currentTarget: { name },\n    } = event;\n    setTodos((old) => {\n      const targetIndex = old.findIndex((todo) => todo.id === id);\n      // const oldTodo = old[targetIndex];\n      const newTodo = { text, id, category: name as any }; // interface error 없애기 위해\n      // console.log(oldTodo, newTodo, \"old & new\");\n\n      // 클릭시 local storage 도 수정되도록 기능 구현\n      localStorage.removeItem(newTodo.id.toString());\n      localStorage.setItem(newTodo.id.toString(), JSON.stringify(newTodo));\n\n      return [\n        ...old.slice(0, targetIndex),\n        newTodo,\n        ...old.slice(targetIndex + 1),\n      ];\n    });\n  };\n  const onClickDelete = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n    setTodos((old) => {\n      const targetIndex = old.findIndex((todo) => todo.id === id);\n      const newTodo = { text, id, category: name as any };\n\n      // 클릭시 삭제되는 기능 구현\n      localStorage.removeItem(newTodo.id.toString());\n      return [...old.slice(0, targetIndex), ...old.slice(targetIndex + 1)];\n    });\n  };\n\n  return (\n    <li>\n      <span onClick={onClickDelete}>{text}</span>\n      {category !== Categories.DOING && (\n        <button name={Categories.DOING} onClick={onClick}>\n          Doing\n        </button>\n      )}\n      {category !== Categories.TO_DO && (\n        <button name={Categories.TO_DO} onClick={onClick}>\n          ToDo\n        </button>\n      )}\n      {category !== Categories.DONE && (\n        <button name={Categories.DONE} onClick={onClick}>\n          Done\n        </button>\n      )}\n    </li>\n  );\n};\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}