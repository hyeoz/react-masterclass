{"ast":null,"code":"var _jsxFileName = \"/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/routes/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router\";\nimport { coinHistoryFetcher } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = () => {\n  _s();\n\n  const {\n    coinId\n  } = useParams(); // console.log(coinId);\n\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => coinHistoryFetcher(coinId ? coinId : \"\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading chart...\" : /*#__PURE__*/_jsxDEV(ApexChart, {\n      type: \"line\",\n      options: {\n        chart: {\n          height: 500,\n          width: 500\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"F8tQGsA9VOOufHrbsUg5eY+nSnY=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/routes/Chart.tsx"],"names":["useQuery","useParams","coinHistoryFetcher","ApexChart","Chart","coinId","isLoading","data","chart","height","width"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;;AAaA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAaJ,SAAS,EAA5B,CADkB,CAElB;;AACA,QAAM;AAAEK,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBP,QAAQ,CAClC,CAAC,OAAD,EAAUK,MAAV,CADkC,EAElC,MAAMH,kBAAkB,CAACG,MAAM,GAAGA,MAAH,GAAY,EAAnB,CAFU,CAApC;AAIA,sBACE;AAAA,cACGC,SAAS,GACR,kBADQ,gBAGR,QAAC,SAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,OAAO,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE;AAAtB;AAAT;AAFX;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnBD;;GAAMN,K;UACeH,S,EAESD,Q;;;KAHxBI,K;AAqBN,eAAeA,KAAf","sourcesContent":["import { useQuery } from \"react-query\";\nimport { useParams } from \"react-router\";\nimport { coinHistoryFetcher } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface HistoricalDataInterface {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\nconst Chart = () => {\n  const { coinId } = useParams<{ coinId: string }>();\n  // console.log(coinId);\n  const { isLoading, data } = useQuery<HistoricalDataInterface[]>(\n    [\"ohlcv\", coinId],\n    () => coinHistoryFetcher(coinId ? coinId : \"\")\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"line\"\n          options={{ chart: { height: 500, width: 500 } }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}