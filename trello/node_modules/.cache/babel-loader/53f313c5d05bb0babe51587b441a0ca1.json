{"ast":null,"code":"var _jsxFileName = \"/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/routes/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router\";\nimport { coinHistoryFetcher } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = () => {\n  _s();\n\n  const {\n    coinId\n  } = useParams(); // console.log(coinId);\n\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => coinHistoryFetcher(coinId ? coinId : \"\"));\n  log;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Chart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Chart, \"F8tQGsA9VOOufHrbsUg5eY+nSnY=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/hyewonlee/Desktop/hyeoz study/nomad-coder/react-masterclass/src/routes/Chart.tsx"],"names":["useQuery","useParams","coinHistoryFetcher","Chart","coinId","isLoading","data","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,kBAAT,QAAmC,QAAnC;;;AAaA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAaH,SAAS,EAA5B,CADkB,CAElB;;AACA,QAAM;AAAEI,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBN,QAAQ,CAClC,CAAC,OAAD,EAAUI,MAAV,CADkC,EAElC,MAAMF,kBAAkB,CAACE,MAAM,GAAGA,MAAH,GAAY,EAAnB,CAFU,CAApC;AAIAG,EAAAA,GAAG;AACH,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CATD;;GAAMJ,K;UACeF,S,EAESD,Q;;;KAHxBG,K;AAWN,eAAeA,KAAf","sourcesContent":["import { useQuery } from \"react-query\";\nimport { useParams } from \"react-router\";\nimport { coinHistoryFetcher } from \"../api\";\n\ninterface HistoricalDataInterface {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\nconst Chart = () => {\n  const { coinId } = useParams<{ coinId: string }>();\n  // console.log(coinId);\n  const { isLoading, data } = useQuery<HistoricalDataInterface>(\n    [\"ohlcv\", coinId],\n    () => coinHistoryFetcher(coinId ? coinId : \"\")\n  );\n  log;\n  return <h1>Chart</h1>;\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}